function rowColor(eventObject,bgcolor,fntcolor)
{
	var count = eventObject.srcElement.parentElement.parentElement.parentElement;
	count.style.backgroundColor = bgcolor;
	count = eventObject.srcElement.parentElement.parentElement.parentElement.childElementCount;
	for(var c=1; c<count; c++)
	{
		var a = eventObject.srcElement.parentElement.parentElement.parentElement.childNodes[c].childNodes[0].childNodes[0];
		a.style.backgroundColor = bgcolor;
		a.style.color = fntcolor;
	}
}

function tupleOld(tab_name)
{
		if(tab_name != undefined)
			var xmlString = "<tuple><old><"+tab_name+"></"+tab_name+"></old></tuple>";
		else
			var xmlString = "<tuple><old></old></tuple>";
		var parser = new DOMParser();
		var tupleOld = parser.parseFromString(xmlString, "text/xml");
		tupleOld = tupleOld.getElementsByTagName("tuple");
		return tupleOld[0];
}

function markMandatory(control)
{
    control.setLabel("" + cordys.getTextContent(control.getLabel()) + "<font color='red'> *</font>");
}

function markMissing(control)
{
    control.setLabel("<font color='red'>" + cordys.getTextContent(control.getLabel()) + " </font>");
}

function remMissing(control)
{
    control.setLabel("<font color='black'>" + cordys.getTextContent(control.getLabel()) + "</font>");
}

function removeLabelColour(control)
{
   control.setLabel("<font color='#4874ad'>" + cordys.getTextContent(control.getLabel()) + " </font>"); 
}
